        -:    0:Source:C:/Users/HP/CLionProjects/C++practice/main.cpp
        -:    0:Graph:C:\Users\HP\CLionProjects\C++practice\cmake-build-debug-coverage\CMakeFiles\C__practice.dir\main.cpp.gcno
        -:    0:Data:C:\Users\HP\CLionProjects\C++practice\cmake-build-debug-coverage\CMakeFiles\C__practice.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include<iostream>
        -:    2:using namespace std;
        -:    3:class AbstractEmployee
        -:    4:{
        -:    5:public:
        -:    6:    virtual void AskForPromotion()=0;
        -:    7:};
        -:    8:class Employee:public AbstractEmployee
        -:    9:{
        -:   10:private:
        -:   11:    int age;
        -:   12:    string characterstics;
        -:   13:protected:
        -:   14:    string name;
        -:   15:
        -:   16:public:
        -:   17:
        -:   18:
        -:   19:    void setName(string Name)
        -:   20:    {
        -:   21:        name= Name;
        -:   22:    }
        -:   23:    string getname()
        -:   24:    {
        -:   25:        return name;
        -:   26:    }
        -:   27:    void setAge(int Age)
        -:   28:    {
        -:   29:        if(Age>=18)
        -:   30:        {
        -:   31:            age=Age;
        -:   32:        }
        -:   33:    }
        -:   34:    int getAge()
        -:   35:    {
        -:   36:        return age;
        -:   37:    }
function _ZN8EmployeeC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS5_ called 2 returned 100% blocks executed 70%
        2:   38:    Employee(string name, int age, string characterstics ) {
        2:   38-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:   39:        this->name = name;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   40:        this->age=age;
        2:   41:        this->characterstics=characterstics;
        2:   41-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   42:    }
        2:   42-block  0
    $$$$$:   42-block  1
call    0 never executed
    $$$$$:   42-block  2
call    1 never executed
        -:   43:
        -:   44:
        -:   45:    void overall()
        -:   46:    {
        -:   47:        cout<<name<<" "<<age<<" "<<characterstics<<endl;
        -:   48:
        -:   49:    }
function _ZN8Employee15AskForPromotionEv called 0 returned 0% blocks executed 0%
    #####:   50:    void AskForPromotion()
        -:   51:    {
    #####:   52:        if(age>=35)
    %%%%%:   52-block  0
branch  0 never executed
branch  1 never executed
        -:   53:        {
    #####:   54:            cout<<"Promoted"<<endl;
    %%%%%:   54-block  0
call    0 never executed
call    1 never executed
        -:   55:        }
        -:   56:        else
        -:   57:        {
    #####:   58:            cout<<"not promoted"<<endl;
    %%%%%:   58-block  0
call    0 never executed
call    1 never executed
        -:   59:        }
    #####:   60:    }
function _ZN8Employee4workEv called 0 returned 0% blocks executed 0%
    #####:   61:    virtual void work()
        -:   62:    {
    #####:   63:        cout<<name<<"is writing Favourite programming/checking email/task backlog" <<endl;
    %%%%%:   63-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   64:    }
        -:   65:
        -:   66:};
        -:   67:class Devloper:public Employee
        -:   68:{
        -:   69:public:
        -:   70:    string Favprogrammnerlanguage1;
function _ZN8DevloperC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS5_S5_ called 1 returned 100% blocks executed 50%
        1:   71:    Devloper(string name, int age, string characterstics,
        1:   72:             string Favprogrammnerlanguage) : Employee(name, age, characterstics) {
        1:   72-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   72-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   72-block  2
call    7 returned 1
call    8 returned 1
call    9 returned 1
    $$$$$:   72-block  3
call   10 never executed
    $$$$$:   72-block  4
    $$$$$:   72-block  5
call   11 never executed
    $$$$$:   72-block  6
call   12 never executed
        -:   73:
        1:   74:            Favprogrammnerlanguage1=Favprogrammnerlanguage;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   75:
        1:   76:    }
        1:   76-block  0
    $$$$$:   76-block  1
call    0 never executed
    $$$$$:   76-block  2
call    1 never executed
        -:   77:    void Fixbug()
        -:   78:    {
        -:   79:        cout<<name<<"Fixed bug using"<<Favprogrammnerlanguage1<<endl;
        -:   80:    }
function _ZN8Devloper4workEv called 2 returned 100% blocks executed 100%
        2:   81:    void work()
        -:   82:    {
        2:   83:    cout<<name<<"is writing"<<Favprogrammnerlanguage1<<"code"<<endl;
        2:   83-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
call    4 returned 2
        2:   84:    }
        -:   85:};
        -:   86:
        -:   87:
        -:   88:class teacher:public Employee
        -:   89:{
        -:   90:public:
        -:   91:    string favteacher1;
        -:   92:
        -:   93:public:
function _ZN7teacherC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS5_S5_ called 1 returned 100% blocks executed 50%
        1:   94:    teacher(string name, int age, string characterstics,
        1:   95:            string favteacher) : Employee(name, age, characterstics) {
        1:   95-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   95-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   95-block  2
call    7 returned 1
call    8 returned 1
call    9 returned 1
    $$$$$:   95-block  3
call   10 never executed
    $$$$$:   95-block  4
    $$$$$:   95-block  5
call   11 never executed
    $$$$$:   95-block  6
call   12 never executed
        -:   96:
        1:   97:        favteacher1=favteacher;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   98:
        1:   99:    }
        1:   99-block  0
    $$$$$:   99-block  1
call    0 never executed
    $$$$$:   99-block  2
call    1 never executed
        -:  100:    void printx()
        -:  101:    {
        -:  102:        cout<<getname()<<" Favteacher-- "<<favteacher1<<endl;
        -:  103:    }
function _ZN7teacher4workEv called 2 returned 100% blocks executed 100%
        2:  104:    void work()
        -:  105:    {
        2:  106:        cout<<name<<"is my"<<favteacher1<<" teacher "<<endl;
        2:  106-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
call    4 returned 2
        2:  107:    }
        -:  108:
        -:  109:
        -:  110:};
        -:  111:
function main called 1 returned 100% blocks executed 47%
        1:  112:int main()
        -:  113:{
        2:  114:    Devloper d=Devloper("Saldina ",29," Good "," c++");
        1:  114-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  114-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  114-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  114-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  114-block  4
    $$$$$:  114-block  5
    $$$$$:  114-block  6
    $$$$$:  114-block  7
    $$$$$:  114-block  8
    $$$$$:  114-block  9
        2:  115:    teacher t=teacher("Hama",29,"Good","Gama");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  115-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  115-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  115-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  115-block  3
    $$$$$:  115-block  4
    $$$$$:  115-block  5
    $$$$$:  115-block  6
    $$$$$:  115-block  7
    $$$$$:  115-block  8
        -:  116:
        1:  117:    d.work();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  118:    t.work();
        1:  118-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  119://if we do it with pointer
        1:  120:     Employee* e1=&d;
        1:  121:     Employee* e2=&t;
        1:  122:     e1->work();
        1:  122-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  123:     e2->work();
        1:  123-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  124:
        -:  125:
        -:  126:
        -:  127:
        1:  128:}
        1:  128-block  0
call    0 returned 1
call    1 returned 1
        1:  128-block  1
    $$$$$:  128-block  2
call    2 never executed
    $$$$$:  128-block  3
call    3 never executed
        -:  129:
